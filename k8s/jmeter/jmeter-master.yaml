apiVersion: batch/v1
kind: CronJob
metadata:
  name: jmeter-master
  labels:
    jmeter_mode: master
    type: jmeter
spec:
  schedule: "*/2 * * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            jmeter_mode: master
          annotations:
            telegraf.influxdata.com/class: "app"
            telegraf.influxdata.com/inputs: |+
              [[inputs.jolokia2_agent]]
                urls = ["http://localhost:8778/jolokia"]
    
                [[inputs.jolokia2_agent.metric]]
                  name  = "java_runtime"
                  mbean = "java.lang:type=Runtime"
                  paths = ["Uptime"]
    
                [[inputs.jolokia2_agent.metric]]
                  name  = "java_memory"
                  mbean = "java.lang:type=Memory"
                  paths = ["HeapMemoryUsage", "NonHeapMemoryUsage", "ObjectPendingFinalizationCount"]
    
                [[inputs.jolokia2_agent.metric]]
                  name     = "java_garbage_collector"
                  mbean    = "java.lang:name=*,type=GarbageCollector"
                  paths    = ["CollectionTime", "CollectionCount"]
                  tag_keys = ["name"]
    
                [[inputs.jolokia2_agent.metric]]
                  name  = "java_last_garbage_collection"
                  mbean = "java.lang:name=*,type=GarbageCollector"
                  paths = ["LastGcInfo"]
                  tag_keys = ["name"]
    
                [[inputs.jolokia2_agent.metric]]
                  name  = "java_threading"
                  mbean = "java.lang:type=Threading"
                  paths = ["TotalStartedThreadCount", "ThreadCount", "DaemonThreadCount", "PeakThreadCount"]
    
                [[inputs.jolokia2_agent.metric]]
                  name  = "java_class_loading"
                  mbean = "java.lang:type=ClassLoading"
                  paths = ["LoadedClassCount", "UnloadedClassCount", "TotalLoadedClassCount"]
    
                [[inputs.jolokia2_agent.metric]]
                  name     = "java_memory_pool"
                  mbean    = "java.lang:name=*,type=MemoryPool"
                  paths    = ["Usage", "PeakUsage", "CollectionUsage"]
                  tag_keys = ["name"]
    
              [[inputs.jolokia]]
                context = "/jolokia/"
              [[inputs.jolokia.servers]]
                host = "127.0.0.1"
                port = "8778"
              [[inputs.jolokia.metrics]]
                name = "heap_memory_usage"
                mbean  = "java.lang:type=Memory"
                attribute = "HeapMemoryUsage"
              [[inputs.jolokia.metrics]]
                name = "thread_count"
                mbean  = "java.lang:type=Threading"
                attribute = "TotalStartedThreadCount,ThreadCount,DaemonThreadCount,PeakThreadCount"
        spec:
          securityContext:
            runAsUser: 1000
            fsGroup: 1000
          containers:
          - name: jmmaster
            image: jmeter/test:latest
            imagePullPolicy: Never
            volumeMounts:
                - mountPath: /report
                  name: jmeter-data-dir
            env:
            - name: MODE
              value: "MASTER"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  key: github_token
                  name: jmeter-creds
            - name: EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: email_password
                  name: jmeter-creds
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  key: host
                  name: jmeter-configmap
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  key: port
                  name: jmeter-configmap
            - name: PROTOCOL
              valueFrom:
                configMapKeyRef:
                  key: protocol
                  name: jmeter-configmap
            - name: THREADS
              valueFrom:
                configMapKeyRef:
                  key: threads
                  name: jmeter-configmap
            - name: DURATION
              valueFrom:
                configMapKeyRef:
                  key: duration
                  name: jmeter-configmap
            - name: RAMPUP
              valueFrom:
                configMapKeyRef:
                  key: rampup
                  name: jmeter-configmap
#            command: ["sh", "/opt/start_test.sh"]
            command: [ "/bin/bash" ]
            args: ["-c", " /bin/bash /opt/start_test.sh -j my-scenario.jmx -s git -o abdultaj/jmeter-k8s-starterkit -v main -p scenario/my-scenario/my-scenario.jmx -r"]
            ports:
            - containerPort: 60000
            - containerPort: 4445
            resources:
              requests:
                memory: "1024Mi"
                cpu: "1024m"
              limits:
                memory: "2048Mi"
                cpu: "1024m"
          restartPolicy: Never
          volumes:
            - name: jmeter-data-dir
              persistentVolumeClaim:
                claimName: jmeter-data-dir-pvc